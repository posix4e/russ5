name: Safari Extension Build with Fastlane

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build Safari Extension
    runs-on: macos-latest
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Select Xcode 16.2
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '16.2'

    - name: Setup Ruby and Node.js
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        gem install fastlane
        npm install

    - name: Create directories and print environment info
      run: |
        npm run create-dirs
        npm run print-env
        
    - name: Setup code signing
      env:
        # For manual signing (Option 1)
        CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
        PROVISIONING_PROFILE_EXTENSION_BASE64: ${{ secrets.PROVISIONING_PROFILE_EXTENSION_BASE64 }}
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD || 'temporary_password' }}
        # For fastlane match (Option 3)
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
        MATCH_KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD || 'temporary_password' }}
      run: |
        # If using fastlane match and secrets are available, set up match
        if [ -n "$MATCH_PASSWORD" ] && [ -n "$MATCH_GIT_URL" ]; then
          echo "Setting up fastlane match..."
          # Update Matchfile with the repository URL if provided as a secret
          if [ -n "$MATCH_GIT_URL" ]; then
            sed -i.bak "s|git_url(\".*\")|git_url(\"$MATCH_GIT_URL\")|g" fastlane/Matchfile
          fi
          
          # Run match to sync certificates and profiles
          bundle exec fastlane match development
        else
          # Fall back to manual signing setup
          echo "Using manual signing setup..."
          npm run setup-signing
        fi

    - name: Build with Fastlane or xcodebuild
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
        FASTLANE_APPLE_ID: ${{ secrets.FASTLANE_APPLE_ID }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}
        EXTENSION_PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.EXTENSION_PROVISIONING_PROFILE_SPECIFIER }}
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      run: |
        # Validate JavaScript
        npm run validate-js
        
        # Build with fastlane if credentials are available, otherwise use xcodebuild
        if [ -n "$TEAM_ID" ] && [ -n "$FASTLANE_APPLE_ID" ]; then
          npm run build-fastlane
        else
          npm run build-xcode
        fi
        
        # Verify and create summary
        npm run verify-build || true
        npm run create-summary || true

    - name: Package extension
      run: npm run package-extension

    - name: Upload build artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: safari-extension
        path: |
          ./logs/**
          ./dist/**
        if-no-files-found: warn
        retention-days: 7
